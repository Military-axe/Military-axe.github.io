<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smart Contract on Mi1itray.axe</title>
    <link>http://localhost:1313/tags/smart-contract/</link>
    <description>Recent content in Smart Contract on Mi1itray.axe</description>
    <generator>Hugo 0.125.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Oct 2023 14:42:18 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/smart-contract/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BiAn: Smart Contract Source Code Obfuscation</title>
      <link>http://localhost:1313/blog/2023-10-12-bian-smart-contract-source-code-obfuscation/</link>
      <pubDate>Thu, 12 Oct 2023 14:42:18 +0800</pubDate>
      <guid>http://localhost:1313/blog/2023-10-12-bian-smart-contract-source-code-obfuscation/</guid>
      <description>&lt;p&gt;智能合约代码混淆，感觉还是ollvm的影子，还是那三种模式，只是做了相关的适配以及加了很多其他细节，总体思路是没有变的。&lt;/p&gt;&#xA;&lt;p&gt;创新点在于使用改进后的混沌映射来做不透明谓词，增加了一定的混淆程度&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;会议：IEEE Transactions on Software Engineering&lt;/p&gt;&#xA;&lt;p&gt;等级：CCF-A&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Binary Diffing</title>
      <link>http://localhost:1313/blog/2023-08-19-binary-diffing/</link>
      <pubDate>Sat, 19 Aug 2023 15:56:52 +0800</pubDate>
      <guid>http://localhost:1313/blog/2023-08-19-binary-diffing/</guid>
      <description>&lt;p&gt;最近想看看binary diffing的内容，直接从头看看一篇篇翻，涉及到很多机器学习内容，很多不懂的，慢慢来看吧。这里先看了10几篇，很多都只看了一个摘要。&#xA;主要是了解一下思路，看看这个领域的内容的研究历史，Binary Diffing 1暂时只看到2016年的paper，后续继续更新，主要文章引用如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bitshred: feature hashing malware for scalable triage and semantic analysis.&lt;/li&gt;&#xA;&lt;li&gt;Binary function clustering using semantic hashes.&lt;/li&gt;&#xA;&lt;li&gt;Binslayer: accurate comparison of binary executables.&lt;/li&gt;&#xA;&lt;li&gt;Control flow-based malware variant detection.&lt;/li&gt;&#xA;&lt;li&gt;{MutantX-S}: Scalable Malware Clustering Based on Static Features.&lt;/li&gt;&#xA;&lt;li&gt;Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection.&lt;/li&gt;&#xA;&lt;li&gt;Leveraging semantic signatures for bug search in binary programs.&lt;/li&gt;&#xA;&lt;li&gt;Cross-architecture bug search in binary executables.&lt;/li&gt;&#xA;&lt;li&gt;Bingo: Crossarchitecture cross-os binary search.&lt;/li&gt;&#xA;&lt;li&gt;Statistical similarity of binaries.&lt;/li&gt;&#xA;&lt;li&gt;discovRE: Efficient Cross-Architecture Identification of Bugs in Binary Code.&lt;/li&gt;&#xA;&lt;li&gt;Scalable Graph-based Bug Search for Firmware Images.&lt;/li&gt;&#xA;&lt;li&gt;Crossarchitecture binary semantics understanding via similar code comparison.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
