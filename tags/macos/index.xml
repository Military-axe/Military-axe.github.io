<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MacOS on Mi1itray.axe</title>
    <link>https://military-axe.github.io/tags/macos/</link>
    <description>Recent content in MacOS on Mi1itray.axe</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>mi1itray.axe copyright.</copyright>
    <lastBuildDate>Wed, 14 Jun 2023 15:53:46 +0800</lastBuildDate>
    <atom:link href="https://military-axe.github.io/tags/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KextFuzz Fuzzing macOS Kernel EXTensions on Apple Silicon via Exploiting Mitigations</title>
      <link>https://military-axe.github.io/post/kextfuzz/</link>
      <pubDate>Wed, 14 Jun 2023 15:53:46 +0800</pubDate>
      <guid>https://military-axe.github.io/post/kextfuzz/</guid>
      <description>&lt;p&gt;来自清华vul337实验室与蚂蚁基础安全合作的一篇2023年USENIX Security的文章&lt;/p&gt;&#xA;&lt;p&gt;讲述如何针对macOS内核部分的kext进行模糊测试，原本kext是闭源的部分，同时处于内核。这使得插桩难，容易崩溃，黑盒测试效果差。同时苹果本身一些特权代码被保护。文章针对这些问题提出三个机制来解决&lt;/p&gt;&#xA;&lt;p&gt;通过替换arm的PA指令来插桩，做覆盖率统计；通过本地hook特权检查函数来绕过苹果的检查，进一步fuzz特权代码；设计一个污点分析模块，分析macOS内核接口格式，辅助fuzz&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
